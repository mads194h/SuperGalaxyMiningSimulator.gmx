<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_targetParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd=4;//Speed at which you move(2 is reccommended for RPG style games)
rightbutton=ord("D");//Button you press to move to the right
upbutton=ord("W");//Button you press to move up
leftbutton=ord("A");//Button you press to move to the left
downbutton=ord("S");// Button you press to move down
gridsnap=0;//Make it 1 or true to use grid-based movement, 0 for free-movement
diag=1;//Make 1 or true for 8 direction movement, and 0 or true for 4 direction movement. Leave empty if you're using grid based
//movement
//The rest is pure code that makes you move. Feel free to modify!
//The following moves the object according to a grid
if (gridsnap)&amp;&amp;(place_snapped(gridsnapx,gridsnapy))
{
if keyboard_check(rightbutton){motion_set(0,spd);}
if keyboard_check(upbutton){motion_set(90,spd);}
if keyboard_check(leftbutton){motion_set(180,spd);}
if keyboard_check(downbutton){motion_set(270,spd);}
if !keyboard_check(rightbutton)
if !keyboard_check(upbutton)
if !keyboard_check(leftbutton)
if !keyboard_check(downbutton){motion_set(direction,0);}
}
//The following moves the object freely
else if !(gridsnap)
{
if keyboard_check(rightbutton){motion_set(0,spd);}
if keyboard_check(upbutton){motion_set(90,spd);}
if keyboard_check(leftbutton){motion_set(180,spd);}
if keyboard_check(downbutton){motion_set(270,spd);}
if(diag)
{
if keyboard_check(rightbutton) &amp;&amp; keyboard_check(upbutton){motion_set(45,spd);}
if keyboard_check(upbutton) &amp;&amp; keyboard_check(leftbutton){motion_set(135,spd);}
if keyboard_check(leftbutton) &amp;&amp; keyboard_check(downbutton){motion_set(225,spd);}
if keyboard_check(downbutton) &amp;&amp; keyboard_check(rightbutton){motion_set(315,spd);}
}
if !keyboard_check(rightbutton)
if !keyboard_check(upbutton)
if !keyboard_check(leftbutton)
if !keyboard_check(downbutton){motion_set(direction,0);}
}
x = floor(x)
y = floor(y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hspeed!=0
if !place_free(x+hspeed,y)
{
    if hspeed&gt;0 move_contact_solid(0,hspeed)
    if hspeed&lt;0 move_contact_solid(180,-hspeed)
    hspeed=0
}

if vspeed!=0
if !place_free(x,y+vspeed)
{
    if vspeed&gt;0 move_contact_solid(270,vspeed)
    if vspeed&lt;0 move_contact_solid(90,-vspeed)
    vspeed=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 10
direction = other.direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.moneyCount += 10000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
